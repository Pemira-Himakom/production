{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { setLoading, setSuccess, setError, resetUIState } from \"./uiSlice\";\nconst initialState = {\n  admin: false,\n  user: false,\n  data: {}\n};\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAdminLogout: state => {\n      state.admin = false;\n    },\n    setUserLogout: state => {\n      state.user = false;\n    },\n    setUserLogin: state => {\n      state.user = true;\n    },\n    setAdminLogin: state => {\n      state.admin = true;\n    }\n  }\n});\n\n// login\nexport const login = (input, command) => {\n  return async dispatch => {\n    dispatch(setLoading());\n    const url = getURL(command);\n    const sendRequest = async input => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(input),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Bad request. Check server\");\n      }\n      return response.json();\n    };\n    try {\n      const result = await sendRequest(input);\n      if (result.status) {\n        dispatch(setSuccess(result.message));\n        localStorage.setItem(\"token\", result.accessToken);\n        setTimeout(() => {\n          dispatch(setUserLogin());\n          dispatch(resetUIState());\n        }, 1000);\n      } else {\n        dispatch(setError(result.message));\n      }\n    } catch (error) {\n      dispatch(setError());\n    }\n  };\n};\nfunction getURL(command, adminID) {\n  if (command === \"LOGIN_ADMIN\") {\n    return \"/api/admin/authenticate\";\n  } else if (command === \"LOGIN_USER\") {\n    return \"/api/validate_token\";\n  } else if (command === \"ASSIGN_TOKEN\") {\n    return `/api/admin/${adminID}/assign`;\n  } else if (command === \"RECAP\") {\n    return `/api/admin/${adminID}/assign`;\n  }\n}\nexport const adminLogin = form => {\n  return async dispatch => {\n    dispatch(setLoading());\n    const sendRequest = async form => {\n      const response = await fetch(\"/api/admin/authenticate\", {\n        method: \"POST\",\n        body: JSON.stringify(form),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Bad request. Check server\");\n      }\n      return response.json();\n    };\n    try {\n      const result = await sendRequest(form);\n      console.log(result);\n      if (result.status) {\n        dispatch(setSuccess(result.message));\n        localStorage.setItem(\"refreshToken\", result.accessToken);\n        setTimeout(() => {\n          dispatch(setAdminLogin());\n          dispatch(resetUIState());\n        }, 1000);\n      } else {\n        dispatch(setError(result.message));\n      }\n    } catch (error) {\n      dispatch(setError());\n    }\n  };\n};\nexport const {\n  setAdminLogout,\n  setUserLogout,\n  setUserLogin,\n  setAdminLogin\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const selectAdmin = state => state.auth.admin;","map":{"version":3,"names":["createSlice","setLoading","setSuccess","setError","resetUIState","initialState","admin","user","data","authSlice","name","reducers","setAdminLogout","state","setUserLogout","setUserLogin","setAdminLogin","login","input","command","dispatch","url","getURL","sendRequest","response","fetch","method","body","JSON","stringify","headers","ok","Error","json","result","status","message","localStorage","setItem","accessToken","setTimeout","error","adminID","adminLogin","form","console","log","actions","reducer","selectAdmin","auth"],"sources":["/home/hadzami/pemira/web-pemira-2022/client/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { setLoading, setSuccess, setError, resetUIState } from \"./uiSlice\";\n\nconst initialState = {\n  admin: false,\n  user: false,\n  data: {},\n};\n\nexport const authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setAdminLogout: state => {\n      state.admin = false;\n    },\n    setUserLogout: state => {\n      state.user = false;\n    },\n    setUserLogin: state => {\n      state.user = true;\n    },\n    setAdminLogin: state => {\n      state.admin = true;\n    },\n  },\n});\n\n// login\nexport const login = (input, command) => {\n  return async dispatch => {\n    dispatch(setLoading());\n    const url = getURL(command);\n\n    const sendRequest = async input => {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(input),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Bad request. Check server\");\n      }\n\n      return response.json();\n    };\n\n    try {\n      const result = await sendRequest(input);\n\n      if (result.status) {\n        dispatch(setSuccess(result.message));\n\n        localStorage.setItem(\"token\", result.accessToken);\n\n        setTimeout(() => {\n          dispatch(setUserLogin());\n          dispatch(resetUIState());\n        }, 1000);\n      } else {\n        dispatch(setError(result.message));\n      }\n    } catch (error) {\n      dispatch(setError());\n    }\n  };\n};\n\nfunction getURL(command, adminID) {\n  if (command === \"LOGIN_ADMIN\") {\n    return \"/api/admin/authenticate\";\n  } else if (command === \"LOGIN_USER\") {\n    return \"/api/validate_token\";\n  } else if (command === \"ASSIGN_TOKEN\") {\n    return `/api/admin/${adminID}/assign`;\n  } else if (command === \"RECAP\") {\n    return `/api/admin/${adminID}/assign`;\n  }\n}\n\nexport const adminLogin = form => {\n  return async dispatch => {\n    dispatch(setLoading());\n\n    const sendRequest = async form => {\n      const response = await fetch(\"/api/admin/authenticate\", {\n        method: \"POST\",\n        body: JSON.stringify(form),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Bad request. Check server\");\n      }\n\n      return response.json();\n    };\n\n    try {\n      const result = await sendRequest(form);\n      console.log(result);\n\n      if (result.status) {\n        dispatch(setSuccess(result.message));\n\n        localStorage.setItem(\"refreshToken\", result.accessToken);\n\n        setTimeout(() => {\n          dispatch(setAdminLogin());\n          dispatch(resetUIState());\n        }, 1000);\n      } else {\n        dispatch(setError(result.message));\n      }\n    } catch (error) {\n      dispatch(setError());\n    }\n  };\n};\n\nexport const { setAdminLogout, setUserLogout, setUserLogin, setAdminLogin } =\n  authSlice.actions;\n\nexport default authSlice.reducer;\nexport const selectAdmin = state => state.auth.admin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}